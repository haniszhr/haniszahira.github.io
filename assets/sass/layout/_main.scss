///
/// Dimension by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Main */
///
/// Multiverse by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Main */

#main {
	@include vendor('transition', (
		'-moz-filter #{_duration(panel)} ease',
		'-webkit-filter #{_duration(panel)} ease',
		'-ms-filter #{_duration(panel)} ease',
		'filter #{_duration(panel)} ease'
	));
	@include vendor('display', 'flex');
	@include vendor('flex-wrap', 'wrap');
	-webkit-tap-highlight-color: rgba(255,255,255,0);

	.thumb {
		@include vendor('transition', (
			'opacity 1.25s ease-in-out'
		));
		@include vendor('pointer-events', 'auto');
		-webkit-tap-highlight-color: rgba(255,255,255,0);
		opacity: 1;
		overflow: hidden;
		position: relative;

		&:after {
			@include vendor('background-image', 'linear-gradient(to top, rgba(10,17,25,0.35) 5%, rgba(10,17,25,0) 35%)');
			@include vendor('pointer-events', 'none');
			background-size: cover;
			content: '';
			display: block;
			height: 100%;
			left: 0;
			position: absolute;
			top: 0;
			width: 100%;
		}

		> .image {
			-webkit-tap-highlight-color: rgba(255,255,255,0);
			background-position: center;
			background-repeat: no-repeat;
			background-size: cover;
			border: 0;
			height: 100%;
			left: 0;
			position: absolute;
			top: 0;
			width: 100%;
		}

		> h2 {
			@include vendor('pointer-events', 'none');
			bottom: (1.5em / 0.8);
			font-size: 0.8em;
			left: (1.75em / 0.8);
			margin: 0;
			position: absolute;
			z-index: 1;
		}

		> p {
			display: none;
		}
	}

	&:after {
		@include vendor('pointer-events', 'none');
		@include vendor('transition', (
			'opacity #{_duration(panel)} ease',
			'visibility #{_duration(panel)}',
		));
		background: _palette(bg-overlay);
		content: '';
		display: block;
		height: 100%;
		left: 0;
		opacity: 0;
		position: absolute;
		top: 0;
		visibility: hidden;
		width: 100%;
		z-index: 1;

		body.ie & {
			background: _palette(bg-ie-overlay);
		}
	}

	body.content-active & {
		@include vendor('filter', 'blur(6px)');

		&:after {
			@include vendor('pointer-events', 'auto');
			opacity: 1;
			visibility: visible;
		}
	}

	body.is-preload & {
		.thumb {
			@include vendor('pointer-events', 'none');
			opacity: 0;
		}
	}

	@mixin thumb($rows, $columns, $pad, $minHeight) {
		$baseDelay: _duration(header) - 0.5;
		$defaultDelay: $baseDelay + (((($rows * $columns) + 1) * 1.5) * _duration(thumb));

		.thumb {
			@include vendor('transition-delay', '#{$defaultDelay}');
			height: calc(#{100vh / ($rows + $pad)} - #{_size(header) / $rows});
			min-height: $minHeight;
			width: (100% / $columns);

			@for $i from 1 through (($rows * $columns) * 1.5) {
				&:nth-child(#{$i}) {
					@include vendor('transition-delay', '#{$baseDelay + ($i * _duration(thumb))}');
				}
			}
		}
	}

	// Default.
		@include thumb(
			_misc(main-layout, default, rows),
			_misc(main-layout, default, columns),
			_misc(main-layout, default, pad),
			_misc(main-layout, default, minHeight)
		);

	// XLarge.
		@include breakpoint('<=xlarge') {
			@include thumb(
				_misc(main-layout, xlarge, rows),
				_misc(main-layout, xlarge, columns),
				_misc(main-layout, xlarge, pad),
				_misc(main-layout, xlarge, minHeight)
			);
		}

	// Large.
		@include breakpoint('<=large') {
			@include thumb(
				_misc(main-layout, large, rows),
				_misc(main-layout, large, columns),
				_misc(main-layout, large, pad),
				_misc(main-layout, large, minHeight)
			);
		}

	// Medium.
		@include breakpoint('<=medium') {
			@include thumb(
				_misc(main-layout, medium, rows),
				_misc(main-layout, medium, columns),
				_misc(main-layout, medium, pad),
				_misc(main-layout, medium, minHeight)
			);
		}

	// XSmall.
		@include breakpoint('<=xsmall') {
			@include thumb(
				_misc(main-layout, xsmall, rows),
				_misc(main-layout, xsmall, columns),
				_misc(main-layout, xsmall, pad),
				_misc(main-layout, xsmall, minHeight)
			);
		}

}
	#main {
		@include vendor('flex-grow', '1');
		@include vendor('flex-shrink', '1');
		@include vendor('display', 'flex');
		@include vendor('align-items', 'center');
		@include vendor('justify-content', 'center');
		@include vendor('flex-direction', 'column');
		position: relative;
		max-width: 100%;
		z-index: 3;

		article {
			@include vendor('transform', 'translateY(0.25rem)');
			@include vendor('transition', (
				'opacity #{_duration(article)} ease-in-out',
				'transform #{_duration(article)} ease-in-out'
			));
			@include padding(2.5rem, 2.5rem, (2rem, 0, 1rem, 0));
			position: relative;
			width: 40rem;
			max-width: 100%;
			background-color: transparentize(_palette(bg), 0.15);
			border-radius: _size(border-radius);
			opacity: 0;

			&.active {
				@include vendor('transform', 'translateY(0)');
				opacity: 1;
			}

			.close {
				display: block;
				position: absolute;
				top: 0;
				right: 0;
				width: 4rem;
				height: 4rem;
				cursor: pointer;
				text-indent: 4rem;
				overflow: hidden;
				white-space: nowrap;

				&:before {
					@include vendor('transition', 'background-color #{_duration(transition)} ease-in-out');
					content: '';
					display: block;
					position: absolute;
					top: 0.75rem;
					left: 0.75rem;
					width: 2.5rem;
					height: 2.5rem;
					border-radius: 100%;
					background-position: center;
					background-image: svg-url('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="20px" height="20px" viewBox="0 0 20 20" zoomAndPan="disable"><style>line { stroke: #{_palette(border)}; stroke-width: 1; }</style><line x1="2" y1="2" x2="18" y2="18" /><line x1="18" y1="2" x2="2" y2="18" /></svg>');
					background-size: 20px 20px;
					background-repeat: no-repeat;
				}

				&:hover {
					&:before {
						background-color: _palette(border-bg);
					}
				}

				&:active {
					&:before {
						background-color: _palette(border-bg-alt);
					}
				}
			}
		}

		@include breakpoint('<=small') {
			article {
				@include padding(2rem, 2rem, (1.5rem, 0, 0.5rem, 0));

				.close {
					&:before {
						top: 0.875rem;
						left: 0.875rem;
						width: 2.25rem;
						height: 2.25rem;
						background-size: 14px 14px;
					}
				}
			}
		}

		@include breakpoint('<=xsmall') {
			article {
				@include padding(2rem, 1.5rem, (1rem, 0, 0.5rem, 0));
			}
		}
	}